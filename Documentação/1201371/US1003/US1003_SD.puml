@startuml
actor SalesClerk as adm
participant "//<<presentation>>//\nAddCostumerUI" as ui
participant "//<<application>>//\nAddCostumerController" as cc
participant "//<<CUbuilder>>//\nClientUserBuilder" as build
participant "//<<SUbuilder>>//\nSystemUserBuilder" as SUbuild
participant "//<<domain>>//\nsystemUser:SystemUser" as SysUser
participant "//<<domain>>//\nclientUser:ClientUser" as CliUser
participant "//<<persistance>>//\nPersistanceContext" as pc
participant "//<<factory>>//\nRepositoryFactory" as rf
database "//<<repository>>//\nClientUserRepository" as db
database "//<<repository>>//\nSystemUserRepository" as sysdb


autonumber

adm-->ui: Add costumer

activate ui

ui-->cc: create


ui-->adm: asks user information

deactivate ui


adm-->ui: Username, password, First name, Last name,\nE-mail, Role, Calendar, VAT, Phone Number,\nGender, Birthday, Del address, Bill address
activate ui


ui-->cc: addUser(username, password, firstName, lastName,\nemail, roles, createdOn, vat, phoneNumber, gender,\n birthDay, delAddress, billAddress)


activate cc

cc-->SUbuild: create

cc-->build: create

cc-->pc: repositories()

activate pc

pc-->rf: create

pc-->cc: factory

deactivate pc

cc-->rf: users()

activate rf

rf-->db: create

rf-->sysdb: create

rf-->cc: userRepository

deactivate rf


cc-->SUbuild: createSystemUser(Username, password, First name, Last name, E-mail,roles)
activate SUbuild

SUbuild-->SysUser: systemUser=create(Username, password, First name, Last name, E-mail,roles)
SUbuild-->cc:systemUser

deactivate SUbuild
cc-->sysdb:save(systemUser)

activate sysdb
deactivate sysdb

cc-->build: createUser(systemUser,vat, phoneNumber, gender,birthDay, delAddress, billAddress)

activate build

build-->CliUser: clientUser=create(systemUser,vat, phoneNumber, gender,birthDay, delAddress, billAddress)

build-->cc: clientUser

deactivate build

deactivate rf

cc-->db: save(clientUser)

activate db

deactivate db

cc-->ui: user

deactivate cc

ui-->adm: displayUserInfo

deactivate ui
@enduml